@model EagleUniversity.Models.Course

<table class="table">
    <tr>
        <th> File Name</th>
        <th> Document Type</th>
        <th></th>
        <th> UploadDate </th>
        <th> DueDate </th>
        <th>@Ajax.ActionLink("CreateDoc", "Create", "Documents", new { returnTarget="Document", returnId = Model.Id, Id= Model.Id, EntityType="Course", EntityName=Model.CourseName }, new AjaxOptions { UpdateTargetId = "create-entity" }, null) </th>
    </tr>
    @foreach (var doc in Model.DocumentCourseAssignments)
    {
    <tr>
        <td>@Html.DisplayFor(x => doc.AssignedDocument.DocumentName)</td>
        <td>@Html.DisplayFor(x => doc.AssignedDocument.DocumentTypes.DocumentTypeName)</td>
        @if (doc.AssignedDocument.FileType != null)
        {
        <td>
            <a href="~/File?id=@doc.DocumentId" alt="doc" download="@doc.AssignedDocument.DocumentName">Download </a>
        </td>
        }
        else
        {
        <td></td>}
        <td>@Html.DisplayFor(x => doc.AssignedDocument.UploadDate)</td>
        <td>@Html.DisplayFor(x => doc.AssignedDocument.DueDate)</td>
        <td>@Ajax.ActionLink("Edit", "Edit", "Documents", new { returnTarget = "Document", returnId = Model.Id, Id = doc.DocumentId, EntityType = "Course", EntityName = Model.CourseName }, new AjaxOptions { UpdateTargetId = "create-entity" }, null) </td>
        <td>@Ajax.ActionLink("Remove", "DeleteAjax", "Documents", new { returnTarget = "Document", returnId = Model.Id, Id = doc.DocumentId, EntityType = "Course", EntityName = Model.CourseName }, new AjaxOptions { UpdateTargetId = "create-entity" }, null) </td>
    </tr>
    }
</table>
